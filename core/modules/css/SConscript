# -*- python -*-
# Qserv css module SConscript
import distutils.sysconfig
import state
import pytarget
import cctarget

Import('env')
Import('extraTgts')
Import('extraSrcs')

def _debug_dist_target():
    if state.log.verbose:
        t = ["   path : %s, file : %s" % (path, str(f))
             for (path, f) in extraTgts['dist']]
        state.log.debug("extraTgts['dist']" + "\n".join(t))

pythonInc = distutils.sysconfig.get_python_inc()
cppPath = cctarget.getList(env, 'CPPPATH') + [pythonInc]
swigged = env.SharedObject(source="cssLib.i",
                            SWIGFLAGS=['-python', '-c++', '-Iinclude'],
                            SWIGPATH=['..', pythonInc],
                            CPPPATH=cppPath,
                            LDMODULEPREFIX='_', LDMODULESUFFIX='.so'
                            )

extraSrcs["css"] = swigged

# # Create entry for python file, which SCons SWIG builder ignores
pySwig = env.File('cssLib.py')
extraTgts["cssLib.py"] = pySwig

# state.log.debug("extraTgts['dist'] %s" % extraTgts['dist'])
# state.log.debug("pytarget.getPyTargets()")
# _debug_dist_target()
pyFiles = pytarget.getPyTargets(env, ["lsst", "qserv", "css"], [pySwig])
extraTgts['dist'].extend(pyFiles)

import time
t1 = time.time()
defaultTargets = cctarget.getDefaultTargets(env, '.', lambda f: str(f) == "cssLib_wrap.cc")

t2 = time.time()
#print "Elapsed css target time=", t2-t1, map(str,defaultTargets)
Return('defaultTargets')
