# -*- python -*-
Import('env')
import os, fnmatch

sources = []
def getExtraSources():
    xrddir = ""
    if os.environ.has_key('XRD_DIR'):
        xrddir = os.environ['XRD_DIR']
    if os.environ.has_key('XRD_PLATFORM'):
        xrdplat = os.environ['XRD_PLATFORM']
    else:
        xrdplat = "i386_linux26_dbg"
    if xrddir:
        objpath = os.path.join(xrddir,"obj", xrdplat)
        if os.access(objpath, os.F_OK):
            ppath = objpath
        else:
            ppath = os.path.join(xrddir, "lib", xrdplat)
        return map(lambda s:os.path.join(ppath, s), 
                   ["XrdSfsCallBack.o", "XrdXrootdLoadLib.o"])
    return []


for root, dirs, files in os.walk("../src"):
    sources += [os.path.join(root, f) for f in fnmatch.filter(files, "*.cc")]
    dirs = [d for d in dirs if not fnmatch.fnmatch(d, ".*")]
## Until library link support is finished
#sources += getExtraSources()
env.Append(CPPPATH = ['../include'])
env.Replace(RPATH = env['LIBPATH'])
env.Append(RPATH = [os.path.realpath('.')])
env.Append(LIBS=["XrdSfs"])
lib = env.SharedLibrary("qserv_worker", sources)

env.Append(built_libs = [lib])
