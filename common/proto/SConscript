# -*- python -*-
Import('env')
import os
import export_deps

# Construct proto env (add protoc Builder)
pEnv = env.Clone(tools=['default', 'protoc'], PROTOC=os.environ["PROTOC"])
pFiles = pEnv.Protoc(
    [],
    "worker.proto",
    PROTOCPROTOPATH=['.',],
    PROTOCPYTHONOUTDIR=None,
    PROTOCOUTDIR = ".",
    #PROTOCOUTDIR = 'build', # defaults to same directory as .proto
    # PROTOCCPPOUTFLAGS = "dllexport_decl=PROTOCONFIG_EXPORT:", too 
)

sources = ["worker.pb.cc"]
pEnv.Append(CPPPATH=[os.environ["PROTOC_INC"], ".."],
            LIBPATH=os.environ["PROTOC_LIB"])
lib = pEnv.Library("qserv_proto", sources)

# Export proto lib + dependency 
deps = {'LIBPATH' : [os.path.abspath(os.environ["PROTOC_LIB"])],
        'LIBS' : ['protobuf','ssl']}
tup = export_deps.installWithDeps(env, lib, "qserv_proto", "../lib", deps)
env.Append(built_libs=[tup[0]])

# Export proto header + dependency 
deps = {'CPPPATH' : [os.path.abspath(os.environ["PROTOC_INC"])]}
tup = export_deps.installWithDeps(env, "worker.pb.h", "worker.pb.h",
                                  "../include/lsst/qserv", deps)



