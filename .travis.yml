dist: bionic

# whitelist
branches:
  only:
    - master
    - /^tickets\/.*$/

sudo: false

services:
  - docker

language: c++

before_install:
  # Set up parameters for containers deployment
  - cp ./admin/tools/docker/deployment/travis/env.sh ./admin/tools/docker/deployment/localhost/env.sh
  # While running 2_build-git-image.sh [option] <local-path>, <local-path> has to contain a git repository
  # whose current commit is a branch HEAD
  - git checkout -b travis
  - export IMAGE="qserv/qserv:$(git rev-parse --short HEAD)"
  - BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - BRANCH_TAG="travis_"$(echo "$BRANCH" | sed -e "s,tickets/,,")
  - BRANCH_IMAGE="qserv/qserv:${BRANCH_TAG}"
  # Docker user id is 1000, but travis user uid is 2000
  # So give permission to docker user to create qserv/build/ and other scons tmp
  # files
  - chmod o+w .

#install:
# Will not work because travis-ci free plan does not allow builds longer than 50
# minutes
#  - echo "Building image with Qserv dependencies"
#  - travis_wait 120 ./admin/tools/docker/1_build-deps.sh

script:
  # Only message in 'script' section are displayer, message below has to be there
  - echo "Building and testing $IMAGE (alias $BRANCH_IMAGE) and related master and worker images"
  - ./admin/tools/docker/2_build-git-image.sh -F -L -T "$IMAGE" "$PWD" && ./admin/tools/docker/3_build-configured-images.sh -L -i "$IMAGE" && ./admin/tools/docker/deployment/localhost/run-multinode-tests.sh

notifications:
  slack:
    secure: eRFF9b5XJbZcyfxMojWTOB4bwWUVJf0CRaOYnCsV7cMCW5BwrDRwC+8tpZyEbetyici7XdFN33kW4rRp9UFfOCIsLS5fMJEKgjvgD0ybucThPsBqLE2VDzDzA6dUji7CATCPUtvoJEymM41pnvDZbXmtalipYzZJMPNXHyE8Yy0=

after_success:
  - echo "Generate and upload documentation"
  - curl -fsSL https://raw.githubusercontent.com/lsst-dm/doc-container/master/run.sh | bash -s -- -p "$LTD_PASSWORD" "$PWD"
  - echo "Push $IMAGE and associated master, worker images to Docker Hub"
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
  - docker push "$IMAGE"
  - docker push "${IMAGE}_master"
  - docker push "${IMAGE}_worker"
  - echo "Add tag $BRANCH_IMAGE to images above and push to Docker Hub"
  - docker tag "$IMAGE" "$BRANCH_IMAGE"
  - docker tag "${IMAGE}_master" "${BRANCH_IMAGE}_master"
  - docker tag "${IMAGE}_worker" "${BRANCH_IMAGE}_worker"
  - docker push "$BRANCH_IMAGE"
  - docker push "${BRANCH_IMAGE}_master"
  - docker push "${BRANCH_IMAGE}_worker"
