#!/bin/sh
#
# qserv-czar  This shell script takes care of starting and stopping
#	      Qserv czar.
#
# description: qserv-czar is the Qserv czar service \
# It receive SQL queries process it and send it to Qserv workers \
# and then it returns the results it to mysql-proxy. \
# Note that Qserv service won't start if CSS database is empty.

### BEGIN INIT INFO
# Provides: qserv-czar
# Short-Description: start and stop qserv czar
# Description: qserv-czar is the Qserv czar service \
#              It receive SQL queries process it and send it to Qserv workers \
#              and then it returns the results it to mysql-proxy. \
#              Note that Qserv service won't start if CSS database is empty.
### END INIT INFO

DIR=$(cd "$(dirname "$0")"; pwd -P)

# Source functions library.
. ${DIR}/qserv-functions

NAME="qserv-czar"
DAEMON=${NAME}

source_sysconfig ${DIR}

# Check variables which are not controlled by application
local_err_msg="Failure while starting ${NAME}:"
if [ ! -w "${QSERV_RUN_DIR}" -o ! -d "${QSERV_RUN_DIR}" ]; then
    log_failure_msg "${local_err_msg} \$QSERV_RUN_DIR isn't a writable \
directory"
    exit 1
fi
if [ ! -w "${QSERV_PID_DIR}" -o ! -d "${QSERV_PID_DIR}" ]; then
    log_failure_msg "${local_err_msg} \$QSERV_PID_DIR isn't a writable \
directory"
    exit 1
fi
if [ ! -w "${QSERV_LOG_DIR}" -o ! -d "${QSERV_LOG_DIR}" ]; then
    log_failure_msg "${local_err_msg} \$QSERV_LOG_DIR isn't a writable \
directory"
    exit 1
fi

start=startCzar.py
config=${QSERV_RUN_DIR}/etc/${NAME}.cnf
pidfile=${QSERV_PID_DIR}/${NAME}.pid
lockfile=${QSERV_RUN_DIR}/var/lock/subsys/${NAME}
logfile=${QSERV_LOG_DIR}/${NAME}.log
starttimeout=1

export QSW_RESULTDIR=${QSERV_RUN_DIR}/qserv-run/tmp
# Disabling buffering in python in order to enable "real-time" logging.
export PYTHONUNBUFFERED=1

cmd="${PYTHON} ${start} -c ${config} > ${logfile} 2>&1 &"

start_cmd() {
    start -p $pidfile -l $lockfile -t ${starttimeout} $NAME "${cmd}"
}

stop_cmd() {
    stop -p $pidfile -l $lockfile $NAME
}

# See how we were called.
case "$1" in
    start)
        start_cmd
        ;;
    stop)
        stop_cmd
        ;;
    restart)
        stop_cmd
        start_cmd
        ;;
    condrestart|try-restart)
        if status_of_proc -p ${pidfile} "$DAEMON" "$NAME" >&/dev/null; then
            stop_cmd
            start_cmd
        fi
        ;;
    status)
        status_of_proc -p ${pidfile} "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|status|condrestart|try-restart}"
        exit 2
        ;;
esac

exit $?
